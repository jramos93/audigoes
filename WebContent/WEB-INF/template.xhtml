<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui" lang="en">

<h:head>
	<f:facet name="first">
		<meta http-equiv="X-UA-Compatible" content="IE=edge" />
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
		<meta name="viewport"
			content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" />
		<meta name="apple-mobile-web-app-capable" content="yes" />
	</f:facet>
	<title><ui:insert name="title">Audigoes</ui:insert></title>
	<h:outputScript name="js/nanoscroller.js" library="verona-layout" />
	<h:outputScript name="js/layout.js" library="verona-layout" />
	<h:outputStylesheet name="primeicons/primeicons.css"
		library="primefaces" />
	<h:outputStylesheet name="estilos.css" library="css" />


	<ui:insert name="head" />
	<script>
		(function(i, s, o, g, r, a, m) {
			i['GoogleAnalyticsObject'] = r;
			i[r] = i[r] || function() {
				(i[r].q = i[r].q || []).push(arguments)
			}, i[r].l = 1 * new Date();
			a = s.createElement(o), m = s.getElementsByTagName(o)[0];
			a.async = 1;
			a.src = g;
			m.parentNode.insertBefore(a, m)
		})(window, document, 'script',
				'https://www.google-analytics.com/analytics.js', 'ga');

		ga('create', 'UA-93461466-1', 'auto');
		ga('send', 'pageview');

		PrimeFaces.locales['es'] = {
			closeText : 'Cerrar',
			prevText : 'Anterior',
			nextText : 'Siguiente',
			monthNames : [ 'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo',
					'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre',
					'Noviembre', 'Diciembre' ],
			monthNamesShort : [ 'Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun',
					'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic' ],
			dayNames : [ 'Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves',
					'Viernes', 'Sábado' ],
			dayNamesShort : [ 'Dom', 'Lun', 'Mar', 'Mie', 'Jue', 'Vie', 'Sab' ],
			dayNamesMin : [ 'D', 'L', 'M', 'X', 'J', 'V', 'S' ],
			weekHeader : 'Semana',
			firstDay : 1,
			isRTL : false,
			showMonthAfterYear : false,
			yearSuffix : '',
			timeOnlyTitle : 'Sólo hora',
			timeText : 'Tiempo',
			hourText : 'Hora',
			minuteText : 'Minuto',
			secondText : 'Segundo',
			currentText : 'Fecha actual',
			ampm : false,
			month : 'Mes',
			week : 'Semana',
			day : 'Día',
			today : 'Hoy',
			clear : 'Claro',
			allDayText : 'Todo el día',
			messages : { //optional for Client Side Validation
				'javax.faces.component.UIInput.REQUIRED' : '{0}: Error de validación: se necesita un valor.',
				'javax.faces.converter.IntegerConverter.INTEGER' : '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
				'javax.faces.converter.IntegerConverter.INTEGER_detail' : '{2}: \'{0}\' debe ser un número entre -2147483648 y 2147483647. Ejemplo: {1}',
				'javax.faces.converter.DoubleConverter.DOUBLE' : '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
				'javax.faces.converter.DoubleConverter.DOUBLE_detail' : '{2}: \'{0}\' debe ser un número entre 4.9E-324 y 1.7976931348623157E308  Ejemplo: {1}',
				'javax.faces.converter.BigDecimalConverter.DECIMAL' : '{2}: \'{0}\' debe ser un número decimal positivo o negativo.',
				'javax.faces.converter.BigDecimalConverter.DECIMAL_detail' : '{2}: \'{0}\' debe ser un número decimal positivo o negativo formado por cero o más dígitos, que pueden incluir a continuación una coma decimal y una fracción.  Ejemplo: {1}',
				'javax.faces.converter.BigIntegerConverter.BIGINTEGER' : '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
				'javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail' : '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos. Ejemplo: {1}',
				'javax.faces.converter.ByteConverter.BYTE' : '{2}: \'{0}\' debe ser un número entre 0 y 255.',
				'javax.faces.converter.ByteConverter.BYTE_detail' : '{2}: \'{0}\' debe ser un número entre 0 y 255.  Ejemplo: {1}',
				'javax.faces.converter.CharacterConverter.CHARACTER' : '{1}: \'{0}\' debe ser un carácter válido.',
				'javax.faces.converter.CharacterConverter.CHARACTER_detail' : '{1}: \'{0}\' debe ser un carácter ASCII válido.',
				'javax.faces.converter.ShortConverter.SHORT' : '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
				'javax.faces.converter.ShortConverter.SHORT_detail' : '{2}: \'{0}\' debe ser un número entre -32768 y 32767 Ejemplo: {1}',
				'javax.faces.converter.BooleanConverter.BOOLEAN' : '{1}: \'{0}\' debe ser \'true\' o \'false\'',
				'javax.faces.converter.BooleanConverter.BOOLEAN_detail' : '{1}: \'{0}\' debe ser \'true\' o \'false\'.  Cualquier valor diferente a \'true\' se evaluará como \'false\'.',
				'javax.faces.validator.LongRangeValidator.MAXIMUM' : '{1}: Error de validación: el valor es mayor que el máximo permitido de \'{0}\'',
				'javax.faces.validator.LongRangeValidator.MINIMUM' : '{1}: Error de validación: el valor es inferior que el mínimo permitido de \'{0}\'',
				'javax.faces.validator.LongRangeValidator.NOT_IN_RANGE' : '{2}: Error de validación: el atributo especificado no está entre los valores esperados {0} y {1}.',
				'javax.faces.validator.LongRangeValidator.TYPE={0}' : 'Error de validación: el valor no tiene el tipo correcto.',
				'javax.faces.validator.DoubleRangeValidator.MAXIMUM' : '{1}: Error de validación: el valor es mayor que el máximo permitido de \'{0}\'',
				'javax.faces.validator.DoubleRangeValidator.MINIMUM' : '{1}: Error de validación: el valor es inferior que el mínimo permitido de \'{0}\'',
				'javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE' : '{2}: Error de validación: el atributo especificado no está entre los valores esperados {0} y {1}',
				'javax.faces.validator.DoubleRangeValidator.TYPE={0}' : 'Error de validación: el valor no tiene el tipo correcto.',
				'javax.faces.converter.FloatConverter.FLOAT' : '{2}: \'{0}\' debe ser un número formado por uno o varios dígitos.',
				'javax.faces.converter.FloatConverter.FLOAT_detail' : '{2}: \'{0}\' debe ser un número entre 1.4E-45 y 3.4028235E38  Ejemplo: {1}',
				'javax.faces.converter.DateTimeConverter.DATE' : '{2}: \'{0}\' no se ha podido reconocer como fecha.',
				'javax.faces.converter.DateTimeConverter.DATE_detail' : '{2}: \'{0}\' no se ha podido reconocer como fecha. Ejemplo: {1}',
				'javax.faces.converter.DateTimeConverter.TIME' : '{2}: \'{0}\' no se ha podido reconocer como hora.',
				'javax.faces.converter.DateTimeConverter.TIME_detail' : '{2}: \'{0}\' no se ha podido reconocer como hora. Ejemplo: {1}',
				'javax.faces.converter.DateTimeConverter.DATETIME' : '{2}: \'{0}\' no se ha podido reconocer como fecha y hora.',
				'javax.faces.converter.DateTimeConverter.DATETIME_detail' : '{2}: \'{0}\' no se ha podido reconocer como fecha y hora. Ejemplo: {1}',
				'javax.faces.converter.DateTimeConverter.PATTERN_TYPE' : '{1}: debe especificarse el atributo \'pattern\' o \'type\' para convertir el valor \'{0}\'',
				'javax.faces.converter.NumberConverter.CURRENCY' : '{2}: \'{0}\' no se ha podido reconocer como un valor de divisa.',
				'javax.faces.converter.NumberConverter.CURRENCY_detail' : '{2}: \'{0}\' no se ha podido reconocer como un valor de divisa. Ejemplo: {1}',
				'javax.faces.converter.NumberConverter.PERCENT' : '{2}: \'{0}\' no se ha podido reconocer como porcentaje.',
				'javax.faces.converter.NumberConverter.PERCENT_detail' : '{2}: \'{0}\' no se ha podido reconocer como porcentaje. Ejemplo: {1}',
				'javax.faces.converter.NumberConverter.NUMBER' : '{2}: \'{0}\' no se ha podido reconocer como fecha.',
				'javax.faces.converter.NumberConverter.NUMBER_detail' : '{2}: \'{0}\' no es un número. Ejemplo: {1}',
				'javax.faces.converter.NumberConverter.PATTERN' : '{2}: \'{0}\' no es un patrón numérico.',
				'javax.faces.converter.NumberConverter.PATTERN_detail' : '{2}: \'{0}\' no es un patrón numérico. Ejemplo: {1}',
				'javax.faces.validator.LengthValidator.MINIMUM' : '{1}: Error de validación: el largo es inferior que el mínimo permitido de \'{0}\'',
				'javax.faces.validator.LengthValidator.MAXIMUM' : '{1}: Error de validación: el largo es mayor que el máximo permitido de \'{0}\'',
				'javax.faces.validator.RegexValidator.PATTERN_NOT_SET' : 'Se debe establecer el patrón de Regex.',
				'javax.faces.validator.RegexValidator.PATTERN_NOT_SET_detail' : 'El patrón Regex debe establecerse en un valor no vacío.',
				'javax.faces.validator.RegexValidator.NOT_MATCHED' : 'El patrón Regex no coincide',
				'javax.faces.validator.RegexValidator.NOT_MATCHED_detail' : 'El patrón Regex de \'{0}\' no coincide',
				'javax.faces.validator.RegexValidator.MATCH_EXCEPTION' : 'Error en expresión regular.',
				'javax.faces.validator.RegexValidator.MATCH_EXCEPTION_detail' : 'Error en expresión regular, \'{0}\'',
				//optional for bean validation integration in client side validation
				'javax.faces.validator.BeanValidator.MESSAGE' : '{0}',
				'javax.validation.constraints.AssertFalse.message' : 'debe ser falso',
				'javax.validation.constraints.AssertTrue.message' : 'debe ser verdadero',
				'javax.validation.constraints.DecimalMax.message' : 'debe ser menor que o igual a {0}',
				'javax.validation.constraints.DecimalMin.message' : 'debe ser mayor que o igual a {0}',
				'javax.validation.constraints.Future.message' : 'debe ser una fecha futura',
				'javax.validation.constraints.Max.message' : 'debe ser menor que o igual a {0}',
				'javax.validation.constraints.Min.message' : 'debe ser mayor que o igual a {0}',
				'javax.validation.constraints.NotNull.message' : 'no debe ser nulo',
				'javax.validation.constraints.Null.message' : 'debe ser nulo',
				'javax.validation.constraints.Past.message' : 'debe ser una fecha pasada',
				'javax.validation.constraints.Pattern.message' : 'debe coincidir con "{0}"',
				'javax.validation.constraints.Size.message' : 'el tamaño debe estar entre {0} y {1}'
			}
		};

		function onrangechange2() {
			var first = PF('timelineFirstWdgt');
			if (first.jq.data("rangeFired")) {
				first.jq.data("rangeFired", null);
				return;
			}
			var second = PF('timelineSecondWdgt');
			var range = second.getVisibleRange();
			second.jq.data("rangeFired", true);
			PF('timelineFirstWdgt').setVisibleRange(range.start, range.end);
		}
	</script>
</h:head>

<h:body styleClass="main-body">
	<h:outputScript name="js/boton.js" />
	<h:outputStylesheet name="estilo.css" library="css" />
	<!-- 	<h:outputScript name="js/jquery-latest.js" /> -->

	<span class="ir-arriba fa fa-arrow-up"></span>
	<div class="layout-wrapper layout-menu-horizontal">
		<ui:include src="./topbar.xhtml" />

		<div class="layout-content">
			<p:growl id="msg" showDetail="true" life="5000">
				<p:autoUpdate></p:autoUpdate>
			</p:growl>
			<p:confirmDialog global="true" showEffect="fade" hideEffect="fade">
				<p:commandButton value="Si" type="button"
					styleClass="ui-confirmdialog-yes" icon="pi pi-check" />
				<p:commandButton value="No" type="button"
					styleClass="ui-confirmdialog-no" icon="pi pi-times" />
			</p:confirmDialog>
			<ui:insert name="content">
			</ui:insert>
		</div>

		<ui:include src="./footer.xhtml" />
	</div>

	<p:dialog widgetVar="wvPDF" width="980">
		<p:media value="/report.pdf" width="100%" height="400px" player="pdf" />
	</p:dialog>

	<p:ajaxStatus
		style="width:32px;height:32px;position:fixed;right:7px;bottom:7px">
		<f:facet name="start">
			<i class="fa fa-circle-o-notch fa-spin ajax-loader"
				aria-hidden="true"></i>
		</f:facet>

		<f:facet name="complete">
			<h:outputText value="" />
		</f:facet>
	</p:ajaxStatus>

	<h:outputStylesheet name="css/nanoscroller.css" library="verona-layout" />
	<h:outputStylesheet name="css/layout-blue.css" library="verona-layout" />
</h:body>

</html>